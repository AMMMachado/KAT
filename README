
KAT - K-mer Analysis Toolkit

A suite of tools that analyse jellyfish kmer hashes.  The following tools are currently available in KAT:

sect: SEquence Coverage estimator Tool.  Estimates the coverage of each sequence in a fasta file using kmers
      from a jellyfish hash
comp: Kmer comparison tool.  Creates a matrix of shared kmers between two jellyfish hashes.
plot: Plotting tool.  Creates useful plots to visualise kmer distributions.  Requires gnuplot to be available
      on the system and the binary to be on the PATH environment variable.  The plot tool has a number of
      submodes:
    - asm:   Shows kmer duplication levels within an assembly by using a kmer comparison matrix generated by
             comp with kmers from a read dataset and kmers from an assembly.
    - flame: Shows shared kmer content between two kmer hashes.
    - sect:  Plots kmer coverage from a read dataset across a longer sequence.


-------------------------------------------------------------------------------------------------------------

Installation:

See INSTALL file for details.  Short summary: cd into kat root directory, ensure the gcc tool chain is
available on your system, then type "./configure --prefix=<INSTALL_PATH>; make install;"


-------------------------------------------------------------------------------------------------------------

Operating Instructions:

KAT is a single executable binary file that contains a number of subtools.  To run KAT first make sure it is
available on your PATH environment variable and then type: "kat" on the command line.  This will bring up
a list of available tools within kat.  To get help on any of these subtools simple type: "kat <tool>".  For
example: "kat sect"; will show details on how to use the sequence coverage estimator tool.

All dependencies have been included within the binary where possible, most notably the jellyfish 1.1.10
static library and header files are integrated within kat.  In order to ensure compatibility with KAT,
please ensure any kmer hashes generated with jellyfish are made with version 1.1.10.  Other versions may
work but we make no guarentees. However in order to use the "plot" tool it is necessary for "gnuplot" to be
available on the PATH.


------------------------------------------------------------------------------------------------------------

Extending KAT:

Developers can extend KAT by adding additional tools, whilst leveraging some of the shared resources that
KAT has made available.  In order to add an additional tool to KAT, developers will need a reasonable working
knowledge of C and C++ programming and have GNU auto tools available on their system.  The process for adding
a new subtool is as follows:

1. Create a new directory with the tools name in the "src" directory
2. Copy the template _args.hpp file into this directory and rename to whatever you wish.  Modify the template
   file so that it contains details of how to use your tool.  Comments have been added to the template to
   indicate places where you will have to add your custom code. The args template file makes use of getopt.h
   so developers familiar with this library should have no issues here.  For those unfamiliar with this
   library, please read the getopt documentation:
   http://www.gnu.org/software/libc/manual/html_node/Getopt.html
3. Copy the template _main.cc and _main.hpp files into the new directory and write whatever code is necessary
   for your tool.
4. Add an include and extend the if statement in "src/kat.cc" so that your tool is recognised.
5. Update the "src.kat_args.hpp" to extend the kat help messages.
6. Update the Makefile.am file to include your _main.cc file.
7. Run "./autogen.sh" to generate the actual configure script.  Then run "./configure" to generate the
   actual Makefiles.
8. Run "make" to compile the new version of KAT with your tools included.  The KAT binary will be available in
   the "./bin" directory.

There are some shared resources available which might aid the generation of a subtool.  It is worth browsing
the ./src/inc directory to see what is available.  There are libraries for:

- Easing generation of gnuplot commands.  Code was taken and modified from: http://ndevilla.free.fr/gnuplot/
- Jellyfish access.  These header files were taken from jellyfish V1.1.10:
  http://www.cbcb.umd.edu/software/jellyfish/.  An additional helper file has been added called:
  "jellyfish_helper.hpp" which loads jellyfish hashes from a simple file path.
- kseq.  Enables loading of FASTA and FASTQ files whether uncompressed or gzip compressed.  See:
  "http://lh3lh3.users.sourceforge.net/kseq.shtml" for more details.
- Sparse Matrix implementation.  In order to avoid loading heavy dependencies such as boost a simple sparse
  matrix implementation has been added to store matricies in a relatively memory efficient way.  The code was
  originally taken from: http://www.cplusplus.com/forum/general/8352/ and modified for use in KAT.  If more
  functionality is required than is available here, either extend this class or use a dedicated matrix
  library.
- zlib.  Functionality for compressing and decompressing files using gzip compression is available here.
  See: http://www.zlib.net/zlib_how.html for more information.

If you think your subtool is useful and want it available in the official KAT release then please contact
daniel.mapleson@tgac.ac.uk for discussions on how to harmonise the code.  The job will be easier if you
maintain a branch from a cloned KAT repository.


-------------------------------------------------------------------------------------------------------------

Licensing:

GNU GPL V3.  See COPYING file for details.


-------------------------------------------------------------------------------------------------------------


Authors:

Daniel Mapleson
Bernardo Clavijo
Mario Caccamo

See AUTHORS file for details.


-------------------------------------------------------------------------------------------------------------


Acknowledgements:

The Genome Analysis Centre (TGAC)
The Biotechnology and Biological Sciences Research Council (BBSRC)
